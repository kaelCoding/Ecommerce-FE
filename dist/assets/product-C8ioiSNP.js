import{z as a}from"./index-byB9gkXP.js";import{g as i,a as c,b as d}from"./category-Dvft4zP0.js";const u=a("product",{state:()=>({categoriesWithProducts:[],isLoading:!1,error:null,allProductsLoaded:!1}),actions:{async fetchLimitedProductsForCategories(){if(!(this.categoriesWithProducts.length>0&&!this.isLoading)){this.isLoading=!0,this.error=null;try{const t=await i();if(!t||t.length===0){this.categoriesWithProducts=[];return}const s=t.map(r=>c(r.ID).then(o=>({...r,products:o}))),e=await Promise.all(s);this.categoriesWithProducts=e.filter(r=>r.products&&r.products.length>0)}catch(t){throw this.error=t,console.error("Failed to fetch limited data:",t),t}finally{this.isLoading=!1}}},async fetchCategoriesAndProducts(){if(!this.allProductsLoaded){this.isLoading=!0,this.error=null;try{const t=await i();if(!t||t.length===0){this.categoriesWithProducts=[],this.allProductsLoaded=!0;return}const s=t.map(r=>d(r.ID).then(o=>({...r,products:o}))),e=await Promise.all(s);this.categoriesWithProducts=e.filter(r=>r.products&&r.products.length>0),this.allProductsLoaded=!0}catch(t){throw this.error=t,console.error("Failed to fetch data:",t),t}finally{this.isLoading=!1}}},resetProductState(){this.categoriesWithProducts=[],this.allProductsLoaded=!1,this.isLoading=!1,this.error=null}}});export{u};
