import{W as o,a2 as c,a3 as h,R as n,a4 as d}from"./index-2x8Qa1C7.js";import{g as l,d as u,e as f}from"./category-CiiF-dVP.js";async function a(t,s,e,i={}){if(!(this[s].length>0&&!i.force)){this.isLoading[e]=!0,this.error=null;try{const r=await t();this[s]=r}catch(r){throw this.error=r,console.error(`Failed to fetch ${s}:`,r),r}finally{this.isLoading[e]=!1}}}const y=o("admin",{state:()=>({products:[],categories:[],users:[],isLoading:{products:!1,categories:!1,users:!1,all:!1},error:null}),actions:{async fetchProducts(t=!1){await a.call(this,c,"products","products",{force:t})},async fetchCategories(t=!1){await a.call(this,l,"categories","categories",{force:t})},async fetchUsers(t=!1){await a.call(this,h,"users","users",{force:t})},async fetchAllDashboardData(){if(!(this.products.length>0&&this.categories.length>0&&this.users.length>0)){this.isLoading.all=!0;try{await Promise.all([this.fetchProducts(),this.fetchCategories(),this.fetchUsers()])}catch{this.error="Failed to load dashboard data."}finally{this.isLoading.all=!1}}},async fetchProductById(t){const s=this.products.find(e=>e.ID===t);if(s)return s;try{return await n(t)}catch(e){throw this.error=e,e}},async deleteProduct(t){try{await d(t),this.products=this.products.filter(s=>s.ID!==t)}catch(s){throw this.error=s,s}},addProduct(t){this.products.unshift(t)},updateProduct(t){const s=this.products.findIndex(e=>e.ID===t.ID);s!==-1&&(this.products[s]=t)},async fetchCategoryById(t){const s=this.categories.find(e=>e.ID===t);if(s)return s;try{const e=await u(t);return this.categories.push(e),e}catch(e){throw this.error=e,e}},async deleteCategory(t){try{await f(t),this.categories=this.categories.filter(s=>s.ID!==t)}catch(s){throw this.error=s,s}},addCategory(t){this.categories.push(t)},updateCategory(t){const s=this.categories.findIndex(e=>e.ID===t.ID);s!==-1&&(this.categories[s]=t)}}});export{y as u};
